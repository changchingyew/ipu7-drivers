From 29709381cf51a2e5b1858940d8f9e83973c14f3d Mon Sep 17 00:00:00 2001
From: "Yew, Chang Ching" <chang.ching.yew@intel.com>
Date: Fri, 19 Sep 2025 06:55:24 +0800
Subject: [PATCH 60/61] media: pci: intel: ipu7-isys-csi2: get link frequency
 from pad

In case driver does not have v4l2-control that stores link frequency,
try to retrieve link frequency from pad

Signed-off-by: Yew, Chang Ching <chang.ching.yew@intel.com>
---
 drivers/media/pci/intel/ipu7/ipu7-isys-csi2.c | 18 +++++++++++++++++-
 1 file changed, 17 insertions(+), 1 deletion(-)

diff --git a/drivers/media/pci/intel/ipu7/ipu7-isys-csi2.c b/drivers/media/pci/intel/ipu7/ipu7-isys-csi2.c
index 0fe4299222e8c..ca151c53550b7 100644
--- a/drivers/media/pci/intel/ipu7/ipu7-isys-csi2.c
+++ b/drivers/media/pci/intel/ipu7/ipu7-isys-csi2.c
@@ -52,6 +52,9 @@ static const u32 csi2_supported_codes[] = {
 s64 ipu7_isys_csi2_get_link_freq(struct ipu7_isys_csi2 *csi2)
 {
 	struct media_pad *src_pad;
+	struct v4l2_subdev *ext_sd;
+	struct device *dev;
+	s64 ret;
 
 	src_pad = media_entity_remote_source_pad_unique(&csi2->asd.sd.entity);
 	if (IS_ERR(src_pad)) {
@@ -61,7 +64,20 @@ s64 ipu7_isys_csi2_get_link_freq(struct ipu7_isys_csi2 *csi2)
 		return PTR_ERR(src_pad);
 	}
 
-	return v4l2_get_link_freq(src_pad, 0, 0);
+	ext_sd = media_entity_to_v4l2_subdev(src_pad->entity);
+	if (WARN(!ext_sd, "Failed to get subdev for %s\n", csi2->asd.sd.name))
+		return -ENODEV;
+
+	ret = v4l2_get_link_freq(ext_sd->ctrl_handler, 0, 0);
+	if (ret < 0) {
+		ret = v4l2_get_link_freq(src_pad, 0, 0);
+		if (ret < 0) {
+			dev_err(dev, "Failed to get link frequency for %s\n",
+				csi2->asd.sd.name);
+			return ret;
+		}
+	}
+	return ret;
 }
 
 static int csi2_subscribe_event(struct v4l2_subdev *sd, struct v4l2_fh *fh,
-- 
2.50.1

